{"version":3,"file":"offscreen.js","sources":["../src/offscreen.js"],"sourcesContent":["console.log(\"[Offscreen Script Start] Executing offscreen.js\");\r\n\r\n// Keep track of the iframe we create\r\nlet scrapingIframe = null;\r\nconst IFRAME_ID = 'scraping-iframe';\r\n\r\n// --- REMOVED Globals for Google API/Picker --- \r\n// let pickerApiLoaded = false;\r\n// let oauthToken = null;\r\n// let googleApiKey = null;\r\n// let googleAppId = null;\r\n\r\nconsole.log(\"[Offscreen Script] Adding runtime.onMessage listener...\");\r\n// Listen for messages from the background script\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n    console.log('Offscreen: Received message:', message);\r\n    // This document now ONLY handles parsing/iframe tasks\r\n    if (message.target !== 'offscreen' && message.type !== 'createIframe' && message.type !== 'removeIframe') {\r\n        console.log('Offscreen: Ignoring message not intended for iframe document:', message.type);\r\n        return false; // Ignore messages not intended for this offscreen document\r\n    }\r\n\r\n    switch (message.type) {\r\n        // REMOVED case 'showGooglePicker' - Handled by google_drive_offscreen.js\r\n        // case 'showGooglePicker': ...\r\n        case 'createIframe':\r\n            console.log('[Offscreen] ENTERING createIframe handler...');\r\n            console.log(`[Offscreen] Handling createIframe for URL: ${message.url}`);\r\n            if (scrapingIframe) {\r\n                 console.warn('[Offscreen] Iframe already exists. Removing old one before creating new.');\r\n                 scrapingIframe.remove();\r\n                 scrapingIframe = null;\r\n            }\r\n            if (!message.url || !message.url.startsWith('http')) {\r\n                console.error('[Offscreen] Invalid URL received for createIframe.');\r\n                sendResponse({ success: false, error: 'Invalid URL provided for iframe.' });\r\n                return false; // Synchronous response for invalid input\r\n            }\r\n\r\n            try {\r\n                scrapingIframe = document.createElement('iframe');\r\n                scrapingIframe.id = IFRAME_ID;\r\n                scrapingIframe.src = message.url;\r\n                // Styling to keep it hidden but functional (may need adjustment)\r\n                scrapingIframe.style.position = 'absolute';\r\n                scrapingIframe.style.width = '1px';\r\n                scrapingIframe.style.height = '1px';\r\n                scrapingIframe.style.left = '-9999px';\r\n                scrapingIframe.style.top = '-9999px';\r\n                scrapingIframe.style.border = 'none';\r\n\r\n                document.body.appendChild(scrapingIframe);\r\n                console.log('[Offscreen] Iframe created and appended.');\r\n                // Send success response immediately, loading happens async\r\n                sendResponse({ success: true }); \r\n            } catch (error) {\r\n                 console.error('[Offscreen] Error creating iframe:', error);\r\n                 sendResponse({ success: false, error: `Failed to create iframe: ${error.message}` });\r\n                 // Clean up if partially created\r\n                 if (scrapingIframe) scrapingIframe.remove();\r\n                 scrapingIframe = null;\r\n                 return false; // Synchronous response on error\r\n            }\r\n            // We send the response synchronously above, so return false here.\r\n            return false; \r\n        case 'removeIframe':\r\n            console.log('[Offscreen] Handling removeIframe.');\r\n            if (scrapingIframe) {\r\n                try {\r\n                    scrapingIframe.remove();\r\n                    console.log('[Offscreen] Iframe removed successfully.');\r\n                    scrapingIframe = null;\r\n                    sendResponse({ success: true });\r\n                } catch (error) {\r\n                     console.error('[Offscreen] Error removing iframe:', error);\r\n                     sendResponse({ success: false, error: `Failed to remove iframe: ${error.message}`});\r\n                }\r\n            } else {\r\n                console.warn('[Offscreen] No iframe found to remove.');\r\n                sendResponse({ success: false, error: 'No iframe exists to remove.' });\r\n            }\r\n            return false; // Synchronous response\r\n        default:\r\n            console.log('[Offscreen] Received unhandled message type:', message?.type);\r\n            // It's important to return false if the message type isn't handled\r\n            return false; \r\n    }\r\n});\r\n\r\n// --- REMOVED Google Picker Functions --- \r\n// function loadPickerApi() { ... }\r\n// function handleGapiError(error) { ... }\r\n// function handleGapiLoad() { ... }\r\n// function handleClientLoad() { ... }\r\n// function createPicker() { ... }\r\n// function pickerCallback(data) { ... }\r\n\r\n// Function to close the offscreen document (still potentially useful, e.g., if parsing fails critically)\r\nfunction closeOffscreenDocument() {\r\n  console.log(\"Offscreen: Closing document.\");\r\n  window.close();\r\n}\r\n\r\nconsole.log(\"Offscreen script (Parsing/Iframe) loaded and listener added.\"); "],"names":["scrapingIframe","IFRAME_ID","message","sender","sendResponse","error"],"mappings":"AAAA,QAAQ,IAAI,iDAAiD,EAG7D,IAAIA,EAAiB,KACrB,MAAMC,EAAY,kBAQlB,QAAQ,IAAI,yDAAyD,EAErE,OAAO,QAAQ,UAAU,YAAY,CAACC,EAASC,EAAQC,IAAiB,CAGpE,GAFA,QAAQ,IAAI,+BAAgCF,CAAO,EAE/CA,EAAQ,SAAW,aAAeA,EAAQ,OAAS,gBAAkBA,EAAQ,OAAS,eACtF,eAAQ,IAAI,gEAAiEA,EAAQ,IAAI,EAClF,GAGX,OAAQA,EAAQ,KAAI,CAGhB,IAAK,eAQD,GAPA,QAAQ,IAAI,8CAA8C,EAC1D,QAAQ,IAAI,8CAA8CA,EAAQ,GAAG,EAAE,EACnEF,IACC,QAAQ,KAAK,0EAA0E,EACvFA,EAAe,OAAM,EACrBA,EAAiB,MAElB,CAACE,EAAQ,KAAO,CAACA,EAAQ,IAAI,WAAW,MAAM,EAC9C,eAAQ,MAAM,oDAAoD,EAClEE,EAAa,CAAE,QAAS,GAAO,MAAO,kCAAoC,CAAA,EACnE,GAGX,GAAI,CACAJ,EAAiB,SAAS,cAAc,QAAQ,EAChDA,EAAe,GAAKC,EACpBD,EAAe,IAAME,EAAQ,IAE7BF,EAAe,MAAM,SAAW,WAChCA,EAAe,MAAM,MAAQ,MAC7BA,EAAe,MAAM,OAAS,MAC9BA,EAAe,MAAM,KAAO,UAC5BA,EAAe,MAAM,IAAM,UAC3BA,EAAe,MAAM,OAAS,OAE9B,SAAS,KAAK,YAAYA,CAAc,EACxC,QAAQ,IAAI,0CAA0C,EAEtDI,EAAa,CAAE,QAAS,EAAI,CAAE,CACjC,OAAQC,EAAO,CACX,eAAQ,MAAM,qCAAsCA,CAAK,EACzDD,EAAa,CAAE,QAAS,GAAO,MAAO,4BAA4BC,EAAM,OAAO,EAAE,CAAE,EAE/EL,GAAgBA,EAAe,SACnCA,EAAiB,KACV,EACX,CAED,MAAO,GACX,IAAK,eAED,GADA,QAAQ,IAAI,oCAAoC,EAC5CA,EACA,GAAI,CACAA,EAAe,OAAM,EACrB,QAAQ,IAAI,0CAA0C,EACtDA,EAAiB,KACjBI,EAAa,CAAE,QAAS,EAAI,CAAE,CACjC,OAAQC,EAAO,CACX,QAAQ,MAAM,qCAAsCA,CAAK,EACzDD,EAAa,CAAE,QAAS,GAAO,MAAO,4BAA4BC,EAAM,OAAO,EAAE,CAAC,CACtF,MAED,QAAQ,KAAK,wCAAwC,EACrDD,EAAa,CAAE,QAAS,GAAO,MAAO,6BAA+B,CAAA,EAEzE,MAAO,GACX,QACI,eAAQ,IAAI,+CAAgDF,GAAA,YAAAA,EAAS,IAAI,EAElE,EACd,CACL,CAAC,EAgBD,QAAQ,IAAI,8DAA8D"}