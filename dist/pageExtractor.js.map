{"version":3,"file":"pageExtractor.js","sources":["../src/PageExtractor.js"],"sourcesContent":["\n\n/**\n * Structure of extracted content\n * @typedef {Object} ExtractedContent\n * @property {string} title - Page title or fallback\n * @property {string} content - Cleaned HTML content\n * @property {string} text - Full text content\n * @property {Object[]} segments - Array of content segments\n * @property {Object[]} images - Array of image data\n * @property {Object[]} videos - Array of video data\n * @property {Object[]} tables - Array of table data\n * @property {Object[]} links - Array of link data\n * @property {string} url - Page URL\n * @property {string} extractedAt - ISO timestamp\n * @property {string} [author] - Author name\n * @property {string} [publishDate] - Publication date\n * @property {string} [metaDescription] - Meta description\n * @property {string} [language] - Page language\n * @property {string[]} [keywords] - Keywords or tags\n * @property {string[]} [categories] - Categories\n * @property {number} [wordCount] - Word count\n * @property {number} [readingTime] - Reading time in minutes\n */\n\n/**\n * Structure of a content segment\n * @typedef {Object} ContentSegment\n * @property {string} type - 'heading' | 'paragraph' | 'list' | 'image' | 'video' | 'table' | 'quote' | 'code' | 'button' | 'listitem'\n * @property {number} [level] - Heading level (1-6)\n * @property {string} [text] - Text content\n * @property {Object} [data] - Image, video, table, or button data\n * @property {Object} [context] - Parent link or button context\n * @property {string} [context.type] - 'link' | 'button'\n * @property {string} [context.href] - Link href (if link)\n * @property {string} [context.text] - Button text or aria-label (if button)\n */\n\n/**\n * Structure of image data\n * @typedef {Object} ImageData\n * @property {string} src - Image URL\n * @property {string} alt - Alt text\n * @property {number} [width] - Image width\n * @property {number} [height] - Image height\n * @property {string} [caption] - Caption\n */\n\n/**\n * Structure of video data\n * @typedef {Object} VideoData\n * @property {string} src - Video URL\n * @property {string} type - MIME type\n * @property {string} [poster] - Poster image URL\n * @property {number} [duration] - Duration in seconds\n */\n\n/**\n * Structure of table data\n * @typedef {Object} TableData\n * @property {string[]} headers - Table headers\n * @property {string[][]} rows - Table rows\n * @property {string} [caption] - Table caption\n */\n\n/**\n * Structure of link data\n * @typedef {Object} LinkData\n * @property {string} href - Link URL\n * @property {string} text - Link text\n * @property {string} [title] - Title attribute\n * @property {string} [rel] - Rel attribute\n */\n\n/**\n * Structure of button data\n * @typedef {Object} ButtonData\n * @property {string} text - Button text or aria-label\n * @property {string} [ariaLabel] - ARIA label\n */\n\nfunction getTextDensity(element, doc) {\n  doc = doc || document;\n  var text = (element.innerText || '').trim();\n  var rect = element.getBoundingClientRect();\n  var area = rect.width * rect.height;\n  return area > 0 ? text.length / area : 0;\n}\n\nfunction isBoilerplate(element) {\n  var boilerplateTags = ['header', 'footer', 'nav', 'aside', 'script', 'style', 'iframe', 'noscript', 'form', 'svg', 'banner'];\n  var boilerplateClasses = [\n    'ad', 'advert', 'banner', 'sidebar', 'menu', 'nav', 'footer', 'widget',\n    'social', 'share', 'comment', 'related', 'newsletter', 'popup', 'cookie',\n    'modal', 'promo', 'sponsored', 'trending', 'login', 'signup'\n  ];\n  var tagName = element.tagName.toLowerCase();\n  var className = (element.className || '').toString().toLowerCase();\n  var id = (element.id || '').toLowerCase();\n  var role = (element.getAttribute('role') || '').toLowerCase();\n\n  return (\n    boilerplateTags.includes(tagName) ||\n    boilerplateClasses.some(function(cls) { return className.includes(cls) || id.includes(cls); }) ||\n    element.querySelector('[class*=\"ad\"], [id*=\"ad\"], [class*=\"social\"], [class*=\"share\"], [class*=\"sponsor\"]') ||\n    role === 'navigation' ||\n    role === 'complementary' ||\n    role === 'banner' ||\n    element.hasAttribute('aria-hidden') ||\n    getComputedStyle(element).display === 'none' ||\n    getComputedStyle(element).visibility === 'hidden' ||\n    getComputedStyle(element).opacity === '0'\n  );\n}\n\nfunction scoreElement(element, doc) {\n  doc = doc || document;\n  var score = 0;\n  var tagName = element.tagName.toLowerCase();\n\n  var tagScores = {\n    article: 30,\n    main: 25,\n    section: 20,\n    div: 8,\n    p: 15,\n    figure: 12\n  };\n  score += tagScores[tagName] || 0;\n\n  score += getTextDensity(element, doc) * 200;\n\n  var paragraphs = element.querySelectorAll('p, li, blockquote').length;\n  score += paragraphs * 15;\n  score += Math.min((element.innerText || '').length, 15000) / 30;\n\n  if (isBoilerplate(element)) {\n    score -= 200;\n  }\n\n  var className = (element.className || '').toString().toLowerCase();\n  var id = (element.id || '').toLowerCase();\n  var contentKeywords = ['content', 'article', 'main', 'story', 'body', 'post', 'entry', 'page'];\n  if (contentKeywords.some(function(keyword) { return className.includes(keyword) || id.includes(keyword); })) {\n    score += 50;\n  }\n\n  if (((element.innerText || '').trim().length || 0) < 50) {\n    score -= 40;\n  }\n\n  if (element.querySelector('[itemprop=\"articleBody\"], [itemtype*=\"Article\"], [itemtype*=\"NewsArticle\"]')) {\n    score += 80;\n  }\n\n  var links = element.querySelectorAll('a').length;\n  var textLength = (element.innerText || '').length || 1;\n  if (links / textLength > 0.15) {\n    score -= 30;\n  }\n\n  var richContent = element.querySelectorAll('img, video, table, blockquote, pre').length;\n  score += richContent * 20;\n\n  return score;\n}\n\nfunction cleanContent(element) {\n  var cloned = element.cloneNode(true);\n  var selectorsToRemove = [\n    'header', 'footer', 'nav', 'aside',\n    '[class*=\"ad\"]', '[id*=\"ad\"]',\n    '[class*=\"social\"]', '[class*=\"share\"]',\n    '[class*=\"comment\"]', '[class*=\"related\"]',\n    '[class*=\"sponsor\"]', '[class*=\"promo\"]',\n    'script', 'style', 'iframe', 'noscript',\n    '[aria-hidden=\"true\"]', '[style*=\"display: none\"]',\n    'svg', 'canvas', '[role=\"presentation\"]',\n    '[role=\"banner\"]', '[role=\"complementary\"]'\n  ].join(',');\n\n  cloned.querySelectorAll(selectorsToRemove).forEach(function(el) { el.remove(); });\n\n  cloned.querySelectorAll('*').forEach(function(el) { \n    el.removeAttribute('style');\n    Array.from(el.attributes).forEach(function(attr) {\n      if (attr.name.startsWith('on')) {\n        el.removeAttribute(attr.name);\n      }\n    });\n  });\n\n  cloned.querySelectorAll('div, section, p, span, figure').forEach(function(el) {\n    if (!el.innerText.trim() && !el.querySelector('img, video, a, table')) {\n      el.remove();\n    }\n  });\n\n  cloned.querySelectorAll('p, h1, h2, h3, h4, h5, h6, li, blockquote, button').forEach(function(el) {\n    el.textContent = (el.innerText || '').replace(/\\s+/g, ' ').trim();\n  });\n\n  cloned.querySelectorAll('img, video, a').forEach(function(el) {\n    var keepAttrs = ['src', 'alt', 'href', 'title', 'poster', 'type', 'aria-label'];\n    Array.from(el.attributes).forEach(function(attr) {\n      if (!keepAttrs.includes(attr.name)) el.removeAttribute(attr.name);\n    });\n  });\n\n  return cloned;\n}\n\nfunction getParentContext(element) {\n  var parent = element.parentElement;\n  while (parent && parent !== document.body) {\n    if (parent.tagName === 'A' && parent.href) {\n      return {\n        type: 'link',\n        href: parent.href,\n        text: (parent.innerText || '').trim()\n      };\n    }\n    if (parent.tagName === 'BUTTON') {\n      return {\n        type: 'button',\n        text: (parent.innerText || parent.getAttribute('aria-label') || '').trim(),\n        ariaLabel: parent.getAttribute('aria-label') || undefined\n      };\n    }\n    parent = parent.parentElement;\n  }\n  return null;\n}\n\nfunction extractSegments(element) {\n  var segments = [];\n  var elements = element.querySelectorAll('h1, h2, h3, h4, h5, h6, p, ul, ol, li, figure, video, table, blockquote, pre, button, div');\n\n  elements.forEach(function(el) {\n    var text = (el.innerText || '').trim();\n    if (!text && !el.querySelector('img, video, table') && !['BUTTON', 'FIGURE', 'VIDEO', 'TABLE'].includes(el.tagName)) return;\n\n    var context = getParentContext(el);\n\n    if (['H1', 'H2', 'H3', 'H4', 'H5', 'H6'].includes(el.tagName)) {\n      segments.push({\n        type: 'heading',\n        level: parseInt(el.tagName[1]),\n        text: text,\n        context: context\n      });\n    } else if (el.tagName === 'P') {\n      segments.push({\n        type: 'paragraph',\n        text: text,\n        context: context\n      });\n    } else if (['UL', 'OL'].includes(el.tagName)) {\n      var items = Array.from(el.querySelectorAll('li')).map(function(li) { return (li.innerText || '').trim(); }).filter(Boolean);\n      segments.push({\n        type: 'list',\n        text: items.join(' | '),\n        context: context\n      });\n    } else if (el.tagName === 'LI') {\n      segments.push({\n        type: 'listitem',\n        text: text,\n        context: context\n      });\n    } else if (el.tagName === 'FIGURE') {\n      var img = el.querySelector('img');\n      if (img) {\n        if (segments.length > 0 && segments[segments.length - 1].type === 'image' && segments[segments.length - 1].data?.src === img.src) {\n        } else {\n          segments.push({\n            type: 'image',\n            text: el.querySelector('figcaption')?.innerText.trim(),\n            data: {\n              src: img.src,\n              alt: (img.alt || '').trim(),\n              width: img.width || undefined,\n              height: img.height || undefined,\n              caption: el.querySelector('figcaption')?.innerText.trim()\n            },\n            context: context\n          });\n        }\n      }\n    } else if (el.tagName === 'VIDEO') {\n      segments.push({\n        type: 'video',\n        data: {\n          src: el.src || el.querySelector('source')?.src || '',\n          type: el.type || el.querySelector('source')?.type || '',\n          poster: el.poster || undefined,\n          duration: el.duration || undefined\n        },\n        context: context\n      });\n    } else if (el.tagName === 'TABLE') {\n      var headers = Array.from(el.querySelectorAll('th')).map(function(th) { return (th.innerText || '').trim(); });\n      var rows = Array.from(el.querySelectorAll('tr')).map(function(row) {\n        return Array.from(row.querySelectorAll('td')).map(function(td) { return (td.innerText || '').trim(); });\n      }).filter(function(row) { return row.length > 0; });\n      segments.push({\n        type: 'table',\n        text: el.querySelector('caption')?.innerText.trim(),\n        data: {\n          headers: headers,\n          rows: rows,\n          caption: el.querySelector('caption')?.innerText.trim()\n        },\n        context: context\n      });\n    } else if (el.tagName === 'BLOCKQUOTE') {\n      segments.push({\n        type: 'quote',\n        text: text,\n        context: context\n      });\n    } else if (el.tagName === 'PRE') {\n      segments.push({\n        type: 'code',\n        text: text,\n        context: context\n      });\n    } else if (el.tagName === 'BUTTON') {\n      segments.push({\n        type: 'button',\n        text: text,\n        data: {\n          text: text,\n          ariaLabel: el.getAttribute('aria-label') || undefined\n        },\n        context: context\n      });\n    } else if (el.tagName === 'DIV') {\n      if (el.children.length === 0 && text.length > 0 && text.length < 50) {\n        if (text.match(/^[\\d.,%]+$/) || text.toLowerCase().includes('saving') || text.toLowerCase().includes('compute') || text.toLowerCase().includes('parameter')) {\n          segments.push({\n            type: 'text_block',\n            text: text,\n            context: context\n          });\n        }\n      } else if (el.querySelector('img') && !el.querySelector('figure')) {\n        var divImg = el.querySelector('img');\n        var alreadyAdded = segments.some(seg => seg.type === 'image' && seg.data?.src === divImg.src);\n        if (!alreadyAdded) {\n          segments.push({\n            type: 'image',\n            text: null,\n            data: {\n              src: divImg.src,\n              alt: (divImg.alt || '').trim(),\n              width: divImg.width || undefined,\n              height: divImg.height || undefined,\n              caption: null\n            },\n            context: context\n          });\n        }\n      }\n    }\n  });\n\n  return segments;\n}\n\nfunction extractMetadata(doc) {\n  doc = doc || document;\n  var author = doc.querySelector('meta[name=\"author\"]')?.getAttribute('content') ||\n    doc.querySelector('[itemprop=\"author\"]')?.innerText.trim() ||\n    doc.querySelector('[rel=\"author\"]')?.innerText.trim() ||\n    doc.querySelector('.author-name, .byline')?.innerText.trim();\n  var publishDate = doc.querySelector('meta[name=\"publish-date\"]')?.getAttribute('content') ||\n    doc.querySelector('[itemprop=\"datePublished\"]')?.getAttribute('content') ||\n    doc.querySelector('time[datetime]')?.getAttribute('datetime') ||\n    doc.querySelector('.date, .published')?.innerText.trim();\n  var metaDescription = doc.querySelector('meta[name=\"description\"]')?.getAttribute('content') ||\n    doc.querySelector('meta[property=\"og:description\"]')?.getAttribute('content');\n  var language = doc.documentElement.lang || navigator.language || undefined;\n  var keywords = doc.querySelector('meta[name=\"keywords\"]')?.getAttribute('content')?.split(',').map(function(k) { return k.trim(); }) ||\n    Array.from(doc.querySelectorAll('[itemprop=\"keywords\"], .tag, .category')).map(function(el) { return el.innerText.trim(); }).filter(Boolean);\n  var categories = Array.from(doc.querySelectorAll('[itemprop=\"genre\"], .category, .section')).map(function(el) { return el.innerText.trim(); }).filter(Boolean);\n\n  return {\n    author: author,\n    publishDate: publishDate,\n    metaDescription: metaDescription,\n    language: language,\n    keywords: keywords.length > 0 ? keywords : undefined,\n    categories: categories.length > 0 ? categories : undefined\n  };\n}\n\nfunction filterLinks(links) {\n  var validLinks = [];\n  var seenHrefs = new Set();\n\n  links.forEach(function(link) {\n    var href = link.href;\n    var text = (link.innerText || '').trim();\n    if (!href || !text || href.startsWith('javascript:') || href === '#' || href.startsWith('mailto:')) return;\n\n    var restrictedDomains = [\n      'twitter.com', 'facebook.com', 'linkedin.com', 'instagram.com',\n      'pinterest.com', 'youtube.com', 'tiktok.com', 'snapchat.com'\n    ];\n    try {\n      var url = new URL(href);\n      if (restrictedDomains.some(function(domain) { return url.hostname.includes(domain); })) return;\n      if (url.hostname.includes('ad') || url.pathname.includes('ad') || url.search.includes('ad')) return;\n    } catch {\n      return;\n    }\n\n    if (!seenHrefs.has(href)) {\n      seenHrefs.add(href);\n      validLinks.push({\n        href: href,\n        text: text,\n        title: link.getAttribute('title') || undefined,\n        rel: link.getAttribute('rel') || undefined\n      });\n    }\n  });\n\n  return validLinks;\n}\n\nfunction extractVideos(element) {\n  var videos = [];\n  var videoElements = element.querySelectorAll('video, [data-video]');\n\n  videoElements.forEach(function(vid) {\n    var src = vid.getAttribute('src') || vid.querySelector('source')?.getAttribute('src') || '';\n    if (!src) return;\n\n    videos.push({\n      src: src,\n      type: vid.getAttribute('type') || vid.querySelector('source')?.getAttribute('type') || '',\n      poster: vid.getAttribute('poster') || undefined,\n      duration: vid instanceof HTMLVideoElement ? vid.duration : undefined\n    });\n  });\n\n  return videos;\n}\n\nfunction extractTables(element) {\n  var tables = [];\n  var tableElements = element.querySelectorAll('table');\n\n  tableElements.forEach(function(table) {\n    var headers = Array.from(table.querySelectorAll('th')).map(function(th) { return (th.innerText || '').trim(); });\n    var rows = Array.from(table.querySelectorAll('tr')).map(function(row) {\n      return Array.from(row.querySelectorAll('td')).map(function(td) { return (td.innerText || '').trim(); });\n    }).filter(function(row) { return row.length > 0; });\n    var caption = table.querySelector('caption')?.innerText.trim();\n\n    if (headers.length > 0 || rows.length > 0) {\n      tables.push({\n        headers: headers,\n        rows: rows,\n        caption: caption\n      });\n    }\n  });\n\n  return tables;\n}\n\nfunction extractContent(doc) {\n  doc = doc || document;\n  console.log('[PageExtractor] extractContent called.');\n  try {\n    if (!doc.body.innerText.trim()) {\n      console.warn('[PageExtractor] No content found in body.');\n      return {\n        title: doc.title.trim() || 'Untitled',\n        content: '',\n        text: doc.body.innerText.trim() || '',\n        segments: [],\n        images: [],\n        videos: [],\n        tables: [],\n        links: [],\n        url: doc.location.href,\n        extractedAt: new Date().toISOString(),\n        wordCount: 0,\n        readingTime: 0\n      };\n    }\n\n    var candidates = doc.querySelectorAll('article, main, section, div, [role=\"main\"], [itemprop=\"articleBody\"]');\n    var bestCandidate = null;\n    var highestScore = -Infinity;\n\n    Array.from(candidates).forEach(function(candidate) {\n      var score = scoreElement(candidate, doc);\n      if (score > highestScore) {\n        highestScore = score;\n        bestCandidate = candidate;\n      }\n    });\n\n    if (!bestCandidate || highestScore < 50) {\n      console.warn('No suitable container found, trying fallbacks.');\n      var fallbacks = [doc.body, doc.querySelector('[class*=\"content\"]'), doc.querySelector('[id*=\"content\"]')];\n      for (var i = 0; i < fallbacks.length; i++) {\n        var fallback = fallbacks[i];\n        if (fallback && scoreElement(fallback, doc) > highestScore) {\n          bestCandidate = fallback;\n          highestScore = scoreElement(fallback, doc);\n        }\n      }\n    }\n\n    if (!bestCandidate) {\n      console.warn('No valid content container found, using body fallback.');\n      var bodyText = doc.body.innerText.trim() || '';\n      return {\n        title: doc.title.trim() || 'Untitled',\n        content: '',\n        text: bodyText,\n        segments: [{ type: 'paragraph', text: bodyText }],\n        images: [],\n        videos: [],\n        tables: [],\n        links: [],\n        url: doc.location.href,\n        extractedAt: new Date().toISOString(),\n        wordCount: bodyText.split(/\\s+/).length,\n        readingTime: Math.ceil(bodyText.split(/\\s+/).length / 200)\n      };\n    }\n\n    console.log(`[PageExtractor] Found best candidate: ${bestCandidate.tagName}#${bestCandidate.id}.${bestCandidate.className} with score: ${highestScore}`);\n\n    var cleanedContent = cleanContent(bestCandidate);\n    var metadata = extractMetadata(doc);\n    var segments = extractSegments(cleanedContent);\n    var text = cleanedContent.innerText.trim() || '';\n    var wordCount = text.split(/\\s+/).length;\n    var readingTime = Math.ceil(wordCount / 200);\n\n    console.log(`[PageExtractor] Extracted text length after cleaning: ${text.length}`);\n\n    if (text.length < 50) {\n      console.warn('[PageExtractor] Extracted text too short, using body fallback.');\n      var bodyText = doc.body.innerText.trim() || '';\n      return {\n        title: doc.title.trim() || 'Untitled',\n        content: '',\n        text: bodyText,\n        segments: [{ type: 'paragraph', text: bodyText }],\n        images: [],\n        videos: [],\n        tables: [],\n        links: [],\n        url: doc.location.href,\n        extractedAt: new Date().toISOString(),\n        wordCount: bodyText.split(/\\s+/).length,\n        readingTime: Math.ceil(bodyText.split(/\\s+/).length / 200),\n        author: metadata.author,\n        publishDate: metadata.publishDate,\n        metaDescription: metadata.metaDescription,\n        language: metadata.language,\n        keywords: metadata.keywords,\n        categories: metadata.categories\n      };\n    }\n\n    return {\n      title: doc.title.trim() || doc.querySelector('h1')?.innerText.trim() || 'Untitled',\n      content: cleanedContent.innerHTML,\n      text: text,\n      segments: segments,\n      images: Array.from(cleanedContent.querySelectorAll('img')).map(function(img) {\n        return {\n          src: img.src,\n          alt: (img.alt || '').trim(),\n          width: img.width || undefined,\n          height: img.height || undefined,\n          caption: img.closest('figure')?.querySelector('figcaption')?.innerText.trim()\n        };\n      }),\n      videos: extractVideos(cleanedContent),\n      tables: extractTables(cleanedContent),\n      links: filterLinks(Array.from(cleanedContent.querySelectorAll('a[href]'))),\n      url: doc.location.href,\n      extractedAt: new Date().toISOString(),\n      wordCount: wordCount,\n      readingTime: readingTime,\n      author: metadata.author,\n      publishDate: metadata.publishDate,\n      metaDescription: metadata.metaDescription,\n      language: metadata.language,\n      keywords: metadata.keywords,\n      categories: metadata.categories\n    };\n  } catch (error) {\n    console.error('Content extraction failed:', error);\n    var bodyText = doc.body.innerText.trim() || '';\n    return {\n      title: doc.title.trim() || 'Untitled',\n      content: '',\n      text: bodyText,\n      segments: [{ type: 'paragraph', text: bodyText }],\n      images: [],\n      videos: [],\n      tables: [],\n      links: [],\n      url: doc.location.href,\n      extractedAt: new Date().toISOString(),\n      wordCount: bodyText.split(/\\s+/).length,\n      readingTime: Math.ceil(bodyText.split(/\\s+/).length / 200)\n    };\n  }\n}\n\nconst scraper = {\n  extract: extractContent,\n  version: '2.2.0'\n};\n\n// Expose the scraper object globally for access from executeScript context\nif (typeof window !== 'undefined') {\n  window.TabAgentPageExtractor = scraper;\n}\n\nexport default scraper;"],"names":["_a"],"mappings":"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"}