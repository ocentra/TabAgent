{"version":3,"file":"background.js","sources":["../src/log-client.js","../src/background.js"],"sourcesContent":["import { eventBus } from './eventBus.js';\nimport { DbAddLogRequest, DbInitializationCompleteNotification } from './events/dbEvents.js';\n\nconst hasChromeRuntime = typeof chrome !== 'undefined' && chrome.runtime;\nlet componentName = 'unknown';\nlet mirrorToConsoleDefault = true;\nlet sendToDbDefault = true;\nlet isDbReadyForLogs = false;\nconst logBuffer = [];\n\nasync function flushLogBuffer() {\n    if (!eventBus) return;\n    while (logBuffer.length > 0) {\n        const logEvent = logBuffer.shift();\n        if (logEvent) {\n            try {\n                await eventBus.publish(logEvent.type, logEvent);\n            } catch (error) {\n                console.error(`LogClient (${componentName}): Error publishing buffered log. Error: ${error}. Event:`, logEvent);\n            }\n        }\n    }\n}\n\nfunction init(compName, options = {}) {\n    if (!compName) {\n        console.error(\"LogClient: init() requires a component name.\");\n        return;\n    }\n    componentName = compName;\n    mirrorToConsoleDefault = options.mirrorToConsole !== undefined ? options.mirrorToConsole : true;\n    sendToDbDefault = options.sendToDb !== undefined ? options.sendToDb : true;\n\n    if (eventBus) {\n        eventBus.subscribe(DbInitializationCompleteNotification.name, (notification) => {\n            if (notification.payload.success) {\n                console.log(`[LogClient (${componentName})] Received DB Initialization Complete. Flushing buffer.`);\n                isDbReadyForLogs = true;\n                flushLogBuffer();\n            } else {\n                console.error(`[LogClient (${componentName})] Received DB Initialization FAILED notification. Logs will not be sent to DB. Error:`, notification.payload.error);\n            }\n        });\n    } else {\n        console.error(`LogClient (${componentName}): CRITICAL - eventBus not available during init. DB logging disabled.`);\n        sendToDbDefault = false;\n    }\n\n    let logMode = 'unknown';\n    if (typeof eventBus !== 'undefined') {\n        logMode = 'sendMessage logging (Standard)';\n    } else {\n        logMode = 'console fallback';\n        console.error(`LogClient (${componentName}): CRITICAL - No logging mechanism available. Falling back to console.`);\n    }\n\n    const initialLogMessage = `Log client initialized for component: ${componentName}. (${logMode}, Console Mirror: ${mirrorToConsoleDefault}, SendToDB: ${sendToDbDefault})`;\n    _internalLogHelper('info', initialLogMessage, { mirrorToConsole: mirrorToConsoleDefault, sendToDb: sendToDbDefault, skipInitCheck: true });\n}\n\nasync function _internalLogHelper(level, ...args) {\n    const rawOptions = args.length > 0 && typeof args[args.length - 1] === 'object' && !Array.isArray(args[args.length - 1]) ? args.pop() : {};\n    const options = rawOptions || {};\n\n    const mirrorThisCall = options.mirrorToConsole !== undefined ? options.mirrorToConsole : mirrorToConsoleDefault;\n    let sendThisCall = options.sendToDb !== undefined ? options.sendToDb : sendToDbDefault;\n    const skipInitCheck = options.skipInitCheck || false;\n\n    if (sendThisCall && typeof eventBus === 'undefined') {\n        console.warn(`LogClient (${componentName}): Attempted DB log but eventBus is unavailable. Disabling DB log for this call.`);\n        sendThisCall = false;\n    }\n\n    if (!componentName && !skipInitCheck) {\n        console.error(\"LogClient: Attempted to log before init() was called. Message:\", level, ...args);\n        return;\n    }\n\n    if (mirrorThisCall || level.toLowerCase() === 'error') {\n        const consolePrefix = componentName ? `[${componentName}]` : `[LogClient]`;\n        const consoleArgs = [consolePrefix, ...args];\n        switch (level.toLowerCase()) {\n            case 'error': console.error(...consoleArgs); break;\n            case 'warn': if (mirrorThisCall) console.warn(...consoleArgs); break;\n            case 'debug': if (mirrorThisCall) console.debug(...consoleArgs); break;\n            case 'info': default: if (mirrorThisCall) console.log(...consoleArgs); break;\n        }\n    }\n\n    if (!sendThisCall) return;\n\n    const formattedMessage = args.map(arg => {\n        try {\n            if (arg instanceof Error) {\n                return `Error: ${arg.message}${arg.stack ? '\\n' + arg.stack : ''}`;\n            }\n            if (typeof arg === 'object' && arg !== null) {\n                return '[Object]';\n            }\n            return String(arg);\n        } catch (e) {\n            return `[Unstringifiable Object: ${e.message}]`;\n        }\n    }).join(' ');\n\n    const logPayload = {\n        id: crypto.randomUUID(),\n        timestamp: Date.now(),\n        component: componentName,\n        level: level.toLowerCase(),\n        message: formattedMessage,\n    };\n\n    if (hasChromeRuntime && chrome.storage?.local) {\n        try {\n            const { currentLogSessionId } = await chrome.storage.local.get('currentLogSessionId');\n            if (currentLogSessionId) {\n                logPayload.extensionSessionId = currentLogSessionId;\n            } else {\n                console.warn(`LogClient (${componentName}): Could not retrieve currentLogSessionId from storage.`);\n                logPayload.extensionSessionId = 'unknown-session';\n            }\n        } catch (storageError) {\n            console.error(`LogClient (${componentName}): Error retrieving session ID from storage:`, storageError);\n            logPayload.extensionSessionId = 'storage-error-session';\n        }\n    } else {\n        logPayload.extensionSessionId = 'no-storage-session';\n    }\n\n    const logEvent = new DbAddLogRequest(logPayload);\n\n    if (isDbReadyForLogs) {\n        try {\n            await eventBus.publish(logEvent.type, logEvent);\n        } catch (error) {\n            console.error(`LogClient (${componentName}): Error during eventBus log submission. Error: ${error}. Original message:`, level, ...args);\n        }\n    } else {\n        logBuffer.push(logEvent);\n    }\n}\n\nfunction log(level, ...args) {\n    _internalLogHelper(level, ...args);\n}\n\nfunction logDebug(...args) {\n    _internalLogHelper('debug', ...args);\n}\n\nfunction logInfo(...args) {\n    _internalLogHelper('info', ...args);\n}\n\nfunction logWarn(...args) {\n    _internalLogHelper('warn', ...args);\n}\n\nfunction logError(...args) {\n    _internalLogHelper('error', ...args);\n}\n\nexport { init, log, logDebug, logInfo, logWarn, logError };","import browser from 'webextension-polyfill';\n\nconst OFFSCREEN_DOCUMENT_PATH = 'offscreen.html';\nconst MODEL_WORKER_OFFSCREEN_PATH = 'offscreenWorker.html';\n\nimport * as logClient from './log-client.js';\nimport { eventBus } from './eventBus.js';\nimport { DbInitializeRequest } from './events/dbEvents.js';\n\nlogClient.init('Background');\n\nlet detachedPopups = {};\nlet popupIdToTabId = {};\n\nconst DNR_RULE_ID_1 = 1;\nconst DNR_RULE_PRIORITY_1 = 1;\n\nlet modelWorkerState = 'uninitialized';\nlet workerScriptReadyPromise = null;\nlet workerScriptReadyResolver = null;\nlet workerScriptReadyRejecter = null;\nlet modelLoadPromise = null;\nlet modelLoadResolver = null;\nlet modelLoadRejecter = null;\n\nlet activeGenerations = {};\n\nlet currentLogSessionId = null;\nlet previousLogSessionId = null;\n\nlet lastLoggedProgress = -10;\n\n// Log Session Management\nasync function initializeSessionIds() {\n    logClient.logInfo('Initializing log session IDs...');\n    currentLogSessionId = Date.now() + '-' + Math.random().toString(36).substring(2, 9);\n    logClient.logInfo('Current log session ID:', currentLogSessionId);\n    await browser.storage.local.set({ currentLogSessionId: currentLogSessionId });\n    const { previousLogSessionId: storedPreviousId } = await browser.storage.local.get('previousLogSessionId');\n    previousLogSessionId = storedPreviousId || null;\n    logClient.logInfo('Previous log session ID found in storage:', previousLogSessionId);\n    await browser.storage.local.set({ previousLogSessionId: currentLogSessionId });\n    logClient.logInfo('Stored new previousLogSessionId for next run.');\n}\n\n// Model Worker Offscreen Communication\nasync function hasModelWorkerOffscreenDocument() {\n    const targetUrl = browser.runtime.getURL(MODEL_WORKER_OFFSCREEN_PATH);\n    const existingContexts = await browser.runtime.getContexts({\n        contextTypes: ['OFFSCREEN_DOCUMENT'],\n        documentUrls: [targetUrl]\n    });\n    return existingContexts.length > 0;\n}\n\nasync function setupModelWorkerOffscreenDocument() {\n    if (await hasModelWorkerOffscreenDocument()) {\n        logClient.logInfo(\"Model worker offscreen document already exists.\");\n        return;\n    }\n    logClient.logInfo(\"Creating model worker offscreen document...\");\n    await browser.offscreen.createDocument({\n        url: MODEL_WORKER_OFFSCREEN_PATH,\n        reasons: [browser.offscreen.Reason.WORKERS],\n        justification: 'Run model inference in a separate worker via offscreen document',\n    });\n    logClient.logInfo(\"Model worker offscreen document created.\");\n}\n\nasync function sendToModelWorkerOffscreen(message) {\n    if (message.type !== 'init' && message.type !== 'generate' && message.type !== 'interrupt' && message.type !== 'reset') {\n        if (modelWorkerState === 'uninitialized' || !(await hasModelWorkerOffscreenDocument())) {\n            logClient.logInfo(`Background: Ensuring model worker offscreen doc potentially exists before sending ${message?.type}`);\n            await setupModelWorkerOffscreenDocument();\n        }\n    } else {\n        logClient.logDebug(`Background: Ensuring worker script is ready before sending ${message.type}...`);\n        try {\n            await ensureWorkerScriptIsReady();\n            logClient.logDebug(`Background: Worker script confirmed ready. Proceeding to send ${message.type}.`);\n        } catch (error) {\n            logClient.logError(`Background: Worker script failed to become ready. Cannot send ${message.type}. Error:`, error);\n            modelWorkerState = 'error';\n            throw new Error(`Worker script failed to initialize, cannot send ${message.type}.`);\n        }\n    }\n\n    logClient.logDebug(`Background: Sending message type '${message?.type}' to model worker offscreen doc`);\n    try {\n        const contexts = await browser.runtime.getContexts({\n            contextTypes: ['OFFSCREEN_DOCUMENT'],\n            documentUrls: [browser.runtime.getURL(MODEL_WORKER_OFFSCREEN_PATH)]\n        });\n        if (contexts.length > 0) {\n            browser.runtime.sendMessage(message);\n            logClient.logDebug(`Background: Message type '${message?.type}' sent to offscreen.`);\n            return { success: true };\n        } else {\n            logClient.logError(`Background: Could not find target offscreen document context to send ${message?.type}.`);\n            throw new Error(`Target offscreen document not found.`);\n        }\n    } catch (error) {\n        logClient.logError(`Background: Error sending message type '${message?.type}' to offscreen:`, error);\n        modelWorkerState = 'error';\n        if (message.type === 'init') {\n            if (modelLoadRejecter) modelLoadRejecter(new Error(`Failed to send init message: ${error.message}`));\n            modelLoadPromise = null;\n        } else if (workerScriptReadyRejecter && (modelWorkerState === 'uninitialized' || modelWorkerState === 'creating_worker')) {\n            workerScriptReadyRejecter(new Error(`Failed to send message early: ${error.message}`));\n            workerScriptReadyPromise = null;\n        }\n        throw new Error(`Failed to send message to model worker offscreen: ${error.message}`);\n    }\n}\n\nfunction ensureWorkerScriptIsReady() {\n    logClient.logDebug(`[ensureWorkerScriptIsReady] Current state: ${modelWorkerState}`);\n    if (modelWorkerState !== 'uninitialized' && modelWorkerState !== 'creating_worker') {\n        if (modelWorkerState === 'error' && !workerScriptReadyPromise) {\n            return Promise.reject(new Error(\"Worker script initialization previously failed.\"));\n        }\n        return Promise.resolve();\n    }\n    if (workerScriptReadyPromise) {\n        return workerScriptReadyPromise;\n    }\n\n    logClient.logDebug(\"[ensureWorkerScriptIsReady] Worker script not ready. Initializing and creating promise.\");\n    modelWorkerState = 'creating_worker';\n    workerScriptReadyPromise = new Promise((resolve, reject) => {\n        workerScriptReadyResolver = resolve;\n        workerScriptReadyRejecter = reject;\n\n        setupModelWorkerOffscreenDocument().catch(err => {\n            logClient.logError(\"[ensureWorkerScriptIsReady] Error setting up offscreen doc:\", err);\n            modelWorkerState = 'error';\n            if (workerScriptReadyRejecter) workerScriptReadyRejecter(err);\n            workerScriptReadyPromise = null;\n        });\n    });\n\n    const scriptLoadTimeout = 30000;\n    setTimeout(() => {\n        if (modelWorkerState === 'creating_worker' && workerScriptReadyRejecter) {\n            logClient.logError(`[ensureWorkerScriptIsReady] Timeout (${scriptLoadTimeout}ms) waiting for workerScriptReady.`);\n            workerScriptReadyRejecter(new Error('Timeout waiting for model worker script to load.'));\n            modelWorkerState = 'error';\n            workerScriptReadyPromise = null;\n        }\n    }, scriptLoadTimeout);\n\n    return workerScriptReadyPromise;\n}\n\nasync function loadModel(modelId) {\n    logClient.logInfo(`Request to load model: ${modelId}. Current state: ${modelWorkerState}`);\n    try {\n        await ensureWorkerScriptIsReady();\n        logClient.logDebug(`Worker script confirmed ready (state: ${modelWorkerState}). Proceeding with model load.`);\n    } catch (err) {\n        logClient.logError(\"Failed to ensure worker script readiness:\", err);\n        throw new Error(`Failed to ensure worker script readiness: ${err.message}`);\n    }\n\n    if (modelWorkerState !== 'worker_script_ready' && modelWorkerState !== 'idle' && modelWorkerState !== 'error') {\n        const errorMsg = `Cannot load model '${modelId}'. Worker state is '${modelWorkerState}', expected 'worker_script_ready', 'idle', or 'error'.`;\n        logClient.logError(\"State check failed loading model:\", errorMsg);\n        throw new Error(errorMsg);\n    }\n\n    if (!modelId) {\n        return Promise.reject(new Error(\"Cannot load model: Model ID not provided.\"));\n    }\n\n    if (modelWorkerState === 'model_ready') {\n        logClient.logInfo(`Model appears ready. Assuming it's ${modelId}.`);\n        return Promise.resolve();\n    }\n    if (modelWorkerState === 'loading_model' && modelLoadPromise) {\n        logClient.logInfo(`Model is already loading. Assuming it's ${modelId}.`);\n        return modelLoadPromise;\n    }\n    if (modelWorkerState !== 'worker_script_ready') {\n        logClient.logError(\"Cannot load model. Worker script is not ready. State:\", modelWorkerState);\n        return Promise.reject(new Error(`Cannot load model, worker script not ready (state: ${modelWorkerState})`));\n    }\n\n    logClient.logInfo(`Worker script ready. Initiating load for model: ${modelId}.`);\n    modelWorkerState = 'loading_model';\n    // TODO: Store the modelId being loaded\n    modelLoadPromise = new Promise((resolve, reject) => {\n        modelLoadResolver = resolve;\n        modelLoadRejecter = reject;\n\n        logClient.logDebug(`Attempting to send 'init' message for model: ${modelId}`);\n        sendToModelWorkerOffscreen({ type: 'init', payload: { modelId: modelId } })\n            .catch(err => {\n                logClient.logError(`Failed to send 'init' message for ${modelId}:`, err);\n                modelWorkerState = 'error';\n                if (modelLoadRejecter) modelLoadRejecter(err);\n                modelLoadPromise = null;\n            });\n    });\n\n    const modelLoadTimeout = 300000;\n    setTimeout(() => {\n        if (modelWorkerState === 'loading_model' && modelLoadRejecter) {\n            logClient.logError(`Timeout (${modelLoadTimeout}ms) waiting for model ${modelId} load completion.`);\n            modelLoadRejecter(new Error(`Timeout waiting for model ${modelId} to load.`));\n            modelWorkerState = 'error';\n            modelLoadPromise = null;\n        }\n    }, modelLoadTimeout);\n\n    return modelLoadPromise;\n}\n\n// Declarative Net Request Management\nasync function updateDeclarativeNetRequestRules() {\n    const currentRules = await browser.declarativeNetRequest.getDynamicRules();\n    const currentRuleIds = currentRules.map(rule => rule.id);\n\n    const rulesToAdd = [\n        {\n            id: DNR_RULE_ID_1,\n            priority: DNR_RULE_PRIORITY_1,\n            action: {\n                type: 'modifyHeaders',\n                responseHeaders: [\n                    { header: 'x-frame-options', operation: 'remove' },\n                    { header: 'X-Frame-Options', operation: 'remove' },\n                    { header: 'content-security-policy', operation: 'remove' },\n                    { header: 'Content-Security-Policy', operation: 'remove' }\n                ]\n            },\n            condition: {\n                resourceTypes: ['main_frame'],\n                urlFilter: '|http*://*/*|'\n            }\n        }\n    ];\n\n    const rulesToRemove = currentRuleIds.filter(id => id === DNR_RULE_ID_1);\n\n    try {\n        await browser.declarativeNetRequest.updateDynamicRules({\n            removeRuleIds: rulesToRemove,\n            addRules: rulesToAdd\n        });\n        logClient.logInfo(\"Declarative Net Request rules updated successfully.\");\n    } catch (error) {\n        logClient.logError(\"Error updating Declarative Net Request rules:\", error);\n    }\n}\nupdateDeclarativeNetRequestRules();\n\n// Offscreen Document Management\nasync function hasOffscreenDocument(path) {\n    const filename = path.split('/').pop();\n    const targetUrl = browser.runtime.getURL(filename);\n    const existingContexts = await browser.runtime.getContexts({\n        contextTypes: ['OFFSCREEN_DOCUMENT'],\n        documentUrls: [targetUrl]\n    });\n    return existingContexts.length > 0;\n}\n\nasync function setupOffscreenDocument(path, reasons, justification) {\n    if (await hasOffscreenDocument(path)) {\n        logClient.logInfo(`Background: Offscreen document at ${path} already exists.`);\n        return;\n    }\n    const filename = path.split('/').pop();\n    logClient.logInfo(`Background: Creating offscreen document using filename: ${filename}...`);\n    await browser.offscreen.createDocument({\n        url: filename,\n        reasons: reasons,\n        justification: justification,\n    });\n    logClient.logInfo(`Background: Offscreen document created successfully using ${filename}.`);\n}\n\n// Scraping Logic\nasync function scrapeUrlWithOffscreenIframe(url) {\n    logClient.logInfo(`[Stage 2] Attempting Offscreen + iframe: ${url}`);\n    const DYNAMIC_SCRIPT_ID_PREFIX = 'offscreen-scrape-';\n    const DYNAMIC_SCRIPT_MESSAGE_TYPE = 'offscreenIframeResult';\n    const IFRAME_LOAD_TIMEOUT = 30000;\n    let dynamicScripterId = null;\n\n    const cleanup = async (scriptIdBase) => {\n        logClient.logInfo(`[Stage 2 Cleanup] Starting cleanup for script ID base: ${scriptIdBase}`);\n        if (scriptIdBase) {\n            try {\n                await browser.scripting.unregisterContentScripts({ ids: [scriptIdBase] });\n                logClient.logInfo(`[Stage 2 Cleanup] Unregistered script: ${scriptIdBase}`);\n            } catch (error) {\n                logClient.logWarn(`[Stage 2 Cleanup] Failed to unregister script ${scriptIdBase}:`, error);\n            }\n        }\n        try {\n            await browser.runtime.sendMessage({ type: 'removeIframe', target: 'offscreen' });\n            logClient.logInfo('[Stage 2 Cleanup] Sent removeIframe request to offscreen.');\n        } catch (error) {\n            logClient.logWarn('[Stage 2 Cleanup] Failed to send removeIframe request: ', error);\n        }\n    };\n\n    try {\n        await setupOffscreenDocument(OFFSCREEN_DOCUMENT_PATH, ['DOM_PARSER', 'IFRAME_SCRIPTING'], 'Parse HTML content and manage scraping iframes');\n        logClient.logInfo('[Stage 2] Sending createIframe request to offscreen...');\n        const createResponse = await browser.runtime.sendMessage({\n            type: 'createIframe',\n            target: 'offscreen',\n            url: url\n        });\n        if (!createResponse?.success) {\n            throw new Error(`Failed to create iframe in offscreen: ${createResponse?.error || 'Unknown error'}`);\n        }\n        logClient.logInfo('[Stage 2] Iframe creation request successful. Waiting for load and script...');\n        dynamicScripterId = `${DYNAMIC_SCRIPT_ID_PREFIX}${Date.now()}`;\n        await browser.scripting.registerContentScripts([{\n            id: dynamicScripterId,\n            js: ['PageExtractor.js', 'stage2-helper.js'],\n            matches: [url],\n            runAt: 'document_idle',\n            world: 'ISOLATED',\n            allFrames: true,\n            persistAcrossSessions: false\n        }]);\n        logClient.logInfo(`[Stage 2] Registered dynamic script(s): ${dynamicScripterId} (files: PageExtractor.js, stage2-helper.js)`);\n        let messageListener = null;\n        const scriptResponsePromise = new Promise((resolve, reject) => {\n            const timeoutId = setTimeout(() => {\n                logClient.logWarn(`[Stage 2] Timeout (${IFRAME_LOAD_TIMEOUT / 1000}s) waiting for response from dynamic script.`);\n                if (messageListener) {\n                    browser.runtime.onMessage.removeListener(messageListener);\n                }\n                reject(new Error('Timeout waiting for dynamic script response.'));\n            }, IFRAME_LOAD_TIMEOUT);\n\n            messageListener = (message, sender, sendResponse) => {\n                if (message?.type === DYNAMIC_SCRIPT_MESSAGE_TYPE) {\n                    logClient.logInfo('[Stage 2] Received response from dynamic script:', message.payload);\n                    clearTimeout(timeoutId);\n                    browser.runtime.onMessage.removeListener(messageListener);\n                    if (message.payload?.success) {\n                        resolve(message.payload);\n                    } else {\n                        reject(new Error(message.payload?.error || 'Dynamic script reported failure.'));\n                    }\n                    return false;\n                }\n                return false;\n            };\n            browser.runtime.onMessage.addListener(messageListener);\n            logClient.logInfo('[Stage 2] Listener added for dynamic script response.');\n        });\n        const resultPayload = await scriptResponsePromise;\n        await cleanup(dynamicScripterId);\n        return resultPayload;\n    } catch (error) {\n        logClient.logError(`[Stage 2] Error during Offscreen + iframe process:`, error);\n        await cleanup(dynamicScripterId);\n        throw new Error(`Stage 2 (Offscreen + iframe) failed: ${error.message}`);\n    }\n}\n\nasync function scrapeUrlWithTempTabExecuteScript(url) {\n    logClient.logInfo(`[Stage 3] Attempting Temp Tab + executeScript (using window.scraper.extract): ${url}`);\n    let tempTabId = null;\n    const TEMP_TAB_LOAD_TIMEOUT = 30000;\n\n    return new Promise(async (resolve, reject) => {\n        const cleanupAndReject = (errorMsg) => {\n            logClient.logWarn(`[Stage 3] Cleanup: ${errorMsg}`);\n            if (tempTabId) {\n                browser.tabs.remove(tempTabId).catch(err => logClient.logWarn(`[Stage 3] Error removing tab ${tempTabId}: ${err.message}`));\n                tempTabId = null;\n            }\n            reject(new Error(errorMsg));\n        };\n        try {\n            const tab = await browser.tabs.create({ url: url, active: false });\n            tempTabId = tab.id;\n            if (!tempTabId) throw new Error('Failed to get temporary tab ID.');\n            logClient.logInfo(`[Stage 3] Created temp tab ${tempTabId} for executeScript.`);\n        } catch (error) {\n            return reject(new Error(`Failed to create temp tab: ${error.message}`));\n        }\n        let loadTimeoutId = null;\n        const loadPromise = new Promise((resolveLoad, rejectLoad) => {\n            const listener = (tabId, changeInfo, updatedTab) => {\n                if (tabId === tempTabId && changeInfo.status === 'complete') {\n                    logClient.logInfo(`[Stage 3] Tab ${tempTabId} loaded.`);\n                    if (loadTimeoutId) clearTimeout(loadTimeoutId);\n                    browser.tabs.onUpdated.removeListener(listener);\n                    resolveLoad();\n                }\n            };\n            browser.runtime.onUpdated.addListener(listener);\n            loadTimeoutId = setTimeout(() => {\n                browser.tabs.onUpdated.removeListener(listener);\n                rejectLoad(new Error(`Timeout (${TEMP_TAB_LOAD_TIMEOUT / 1000}s) waiting for page load.`));\n            }, TEMP_TAB_LOAD_TIMEOUT);\n        });\n        try {\n            await loadPromise;\n        } catch (error) {\n            return cleanupAndReject(`Load failed or timed out: ${error.message}`);\n        }\n        logClient.logInfo(`[Stage 3] Injecting PageExtractor.js and calling window.scraper.extract() in tab ${tempTabId}`);\n        try {\n            await browser.scripting.executeScript({\n                target: { tabId: tempTabId },\n                files: ['PageExtractor.js']\n            });\n            const results = await browser.scripting.executeScript({\n                target: { tabId: tempTabId },\n                func: () => window.scraper.extract(),\n            });\n            if (tempTabId) {\n                browser.tabs.remove(tempTabId).catch(err => logClient.logWarn(`[Stage 3] Error removing tab ${tempTabId} post-execute: ${err.message}`));\n                tempTabId = null;\n            }\n            if (results && results.length > 0 && results[0].result) {\n                const scriptResult = results[0].result;\n                if (scriptResult && typeof scriptResult === 'object') {\n                    logClient.logInfo('[Stage 3] window.scraper.extract() succeeded.');\n                    resolve(scriptResult);\n                } else {\n                    reject(new Error(scriptResult?.error || 'window.scraper.extract() failed or returned null.'));\n                }\n            } else {\n                const lastError = browser.runtime.lastError ? browser.runtime.lastError.message : 'No result returned';\n                reject(new Error(`executeScript failed: ${lastError}`));\n            }\n        } catch (error) {\n            cleanupAndReject(`executeScript call failed: ${error.message}`);\n        }\n    });\n}\n\nasync function scrapeUrlWithTempTab_ContentScript(url) {\n    logClient.logInfo(`[Stage 4] Attempting Temp Tab + Content Script: ${url}`);\n    let tempTabId = null;\n    const TEMP_TAB_LOAD_TIMEOUT = 30000;\n\n    return new Promise(async (resolve, reject) => {\n        const cleanupAndReject = (errorMsg) => {\n            if (tempTabId) {\n                browser.tabs.remove(tempTabId).catch(err => logClient.logWarn(`[Stage 4] Error removing tab ${tempTabId} during cleanup: ${err.message}`));\n                tempTabId = null;\n            }\n            reject(new Error(errorMsg));\n        };\n        try {\n            const tab = await browser.tabs.create({ url: url, active: false });\n            tempTabId = tab.id;\n            if (!tempTabId) throw new Error('Failed to get temporary tab ID.');\n            logClient.logInfo(`[Stage 4] Created temp tab ${tempTabId}`);\n        } catch (error) {\n            return reject(new Error(`Failed to create temp tab: ${error.message}`));\n        }\n        let loadTimeoutId = null;\n        const loadPromise = new Promise((resolveLoad, rejectLoad) => {\n            const listener = (tabId, changeInfo, updatedTab) => {\n                if (tabId === tempTabId && changeInfo.status === 'complete') {\n                    logClient.logInfo(`[Stage 4] Tab ${tempTabId} loaded.`);\n                    if (loadTimeoutId) clearTimeout(loadTimeoutId);\n                    browser.tabs.onUpdated.removeListener(listener);\n                    resolveLoad();\n                }\n            };\n            browser.tabs.onUpdated.addListener(listener);\n            loadTimeoutId = setTimeout(() => {\n                browser.tabs.onUpdated.removeListener(listener);\n                rejectLoad(new Error(`Timeout (${TEMP_TAB_LOAD_TIMEOUT / 1000}s) waiting for page load.`));\n            }, TEMP_TAB_LOAD_TIMEOUT);\n        });\n        try {\n            await loadPromise;\n        } catch (error) {\n            return cleanupAndReject(error.message);\n        }\n        logClient.logInfo(`[Stage 4] Sending SCRAPE_PAGE to content script in tab ${tempTabId}`);\n        try {\n            const response = await browser.tabs.sendMessage(tempTabId, { type: 'SCRAPE_PAGE' });\n            if (tempTabId) browser.tabs.remove(tempTabId).catch(err => logClient.logWarn(`[Stage 4] Error removing tab ${tempTabId} post-message: ${err.message}`));\n            tempTabId = null;\n            if (response?.success) {\n                logClient.logInfo(`[Stage 4] Success from content script.`);\n                resolve(response);\n            } else {\n                reject(new Error(response?.error || 'Content script failed or gave invalid response.'));\n            }\n        } catch (error) {\n            cleanupAndReject(`Messaging content script failed: ${error.message}`);\n        }\n    });\n}\n\nasync function scrapeUrlMultiStage(url, chatId, messageId) {\n    logClient.logInfo(`Scraping Orchestrator: Starting for ${url}. ChatID: ${chatId}, MessageID: ${messageId}`);\n    const sendStageResult = (stageResult) => {\n        logClient.logInfo(`[Orchestrator] Sending STAGE_SCRAPE_RESULT for Stage ${stageResult.stage}, ChatID: ${chatId}, Success: ${stageResult.success}`);\n        browser.runtime.sendMessage({\n            type: 'STAGE_SCRAPE_RESULT',\n            payload: stageResult\n        }).catch(e => logClient.logWarn(`[Orchestrator] Failed to send result for Stage ${stageResult.stage}:`, e));\n    };\n\n    try {\n        try {\n            const iframeResult = await scrapeUrlWithOffscreenIframe(url);\n            logClient.logInfo(`[Orchestrator Log] Stage 2 (Offscreen + iframe) Succeeded for ${url}.`);\n            const stage2SuccessPayload = {\n                stage: 2, success: true, chatId: chatId, messageId: messageId,\n                method: 'offscreenIframe', url: url,\n                length: iframeResult?.text?.length || 0,\n                ...iframeResult\n            };\n            sendStageResult(stage2SuccessPayload);\n            return;\n        } catch (stage2Error) {\n            logClient.logWarn(`[Orchestrator Log] Stage 2 (Offscreen + iframe) Failed for ${url}: ${stage2Error.message}`);\n            sendStageResult({ stage: 2, success: false, chatId: chatId, messageId: messageId, error: stage2Error.message });\n        }\n\n        try {\n            const executeScriptResult = await scrapeUrlWithTempTabExecuteScript(url);\n            logClient.logInfo(`[Orchestrator Log] Stage 3 (Temp Tab + executeScript) Succeeded for ${url}.`);\n            const stage3SuccessPayload = {\n                stage: 3, success: true, chatId: chatId, messageId: messageId,\n                method: 'tempTabExecuteScript', url: url,\n                length: executeScriptResult?.text?.length || 0,\n                ...executeScriptResult\n            };\n            sendStageResult(stage3SuccessPayload);\n            return;\n        } catch (stage3Error) {\n            logClient.logWarn(`[Orchestrator Log] Stage 3 (Temp Tab + executeScript) Failed for ${url}: ${stage3Error.message}`);\n            sendStageResult({ stage: 3, success: false, chatId: chatId, messageId: messageId, error: stage3Error.message });\n        }\n\n        try {\n            const tempTabResult = await scrapeUrlWithTempTab_ContentScript(url);\n            logClient.logInfo(`[Orchestrator Log] Stage 4 (Temp Tab + Content Script) Succeeded for ${url}.`);\n            const stage4SuccessPayload = {\n                stage: 4, success: true, chatId: chatId, messageId: messageId,\n                method: 'tempTabContentScript', url: url,\n                length: tempTabResult?.text?.length || 0,\n                ...tempTabResult\n            };\n            logClient.logInfo(\"[Orchestrator Log] Stage 4 Payload being sent:\", stage4SuccessPayload);\n            sendStageResult(stage4SuccessPayload);\n            return;\n        } catch (stage4Error) {\n            logClient.logWarn(`[Orchestrator Log] Stage 4 (Temp Tab + Content Script) Failed for ${url}: ${stage4Error.message}`);\n            sendStageResult({ stage: 4, success: false, chatId: chatId, messageId: messageId, error: stage4Error.message });\n        }\n\n        logClient.logInfo(\"[Orchestrator Log] All stages failed.\");\n    } finally {\n        logClient.logInfo(\"[Orchestrator Cleanup] Attempting to close offscreen document after multi-stage scrape.\");\n        try {\n            if (await hasOffscreenDocument(OFFSCREEN_DOCUMENT_PATH)) {\n                await browser.offscreen.closeDocument();\n                logClient.logInfo(\"[Orchestrator Cleanup] Offscreen document closed successfully.\");\n            } else {\n                logClient.logInfo(\"[Orchestrator Cleanup] No offscreen document found to close.\");\n            }\n        } catch (error) {\n            logClient.logWarn(\"[Orchestrator Cleanup] Error closing offscreen document:\", error);\n        }\n    }\n}\n\n// Google Drive Integration\nasync function getDriveToken() {\n    return new Promise((resolve, reject) => {\n        browser.identity.getAuthToken({ interactive: true }, (token) => {\n            if (browser.runtime.lastError) {\n                reject(new Error(browser.runtime.lastError.message));\n            } else {\n                resolve(token);\n            }\n        });\n    });\n}\n\nasync function fetchDriveFileList(token, folderId = 'root') {\n    const fields = \"files(id, name, mimeType, iconLink, webViewLink, size, createdTime, modifiedTime)\";\n    const query = `'${folderId}' in parents and trashed=false`;\n    const pageSize = 100;\n    const orderBy = 'folder,modifiedTime desc';\n    const url = `https://www.googleapis.com/drive/v3/files?${new URLSearchParams({\n        pageSize: pageSize.toString(),\n        q: query,\n        fields: fields,\n        orderBy: orderBy\n    })}`;\n    logClient.logInfo(`Background: Fetching Drive list for folder '${folderId}': ${url}`);\n    const response = await fetch(url, {\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            'Accept': 'application/json'\n        }\n    });\n    if (!response.ok) {\n        const errorData = await response.text();\n        logClient.logError(`Background: Drive API files.list error (Folder: ${folderId}):`, response.status, errorData);\n        if (response.status === 404) {\n            throw new Error(`Folder with ID '${folderId}' not found or access denied.`);\n        }\n        throw new Error(`Drive API Error ${response.status} (Folder: ${folderId}): ${errorData || response.statusText}`);\n    }\n    const data = await response.json();\n    logClient.logInfo(`Background: Drive API files.list success (Folder: ${folderId}). Found ${data.files?.length || 0} items.`);\n    return data.files || [];\n}\n\nasync function fetchDriveFileContent(token, fileId) {\n    logClient.logWarn(`Background: fetchDriveFileContent not implemented yet for fileId: ${fileId}`);\n    return `(Content fetch not implemented for ${fileId})`;\n}\n\n// Message Forwarding\nasync function forwardMessageToSidePanelOrPopup(message, originalSender) {\n    logClient.logInfo(`Attempting to forward message type '${message?.type}' from worker.`);\n    for (const tabId in detachedPopups) {\n        const popupId = detachedPopups[tabId];\n        logClient.logInfo(`Forwarding message to detached popup ID: ${popupId} (original tab: ${tabId})`);\n        try {\n            await browser.windows.get(popupId);\n            browser.runtime.sendMessage(message);\n        } catch (error) {\n            logClient.logWarn(`Error sending to detached popup ID ${popupId}:`, error.message);\n            if (error.message.includes(\"No window with id\")) {\n                delete detachedPopups[tabId];\n                delete popupIdToTabId[popupId];\n            }\n        }\n    }\n\n    const tabs = await browser.tabs.query({ status: 'complete' });\n    for (const tab of tabs) {\n        if (detachedPopups[tab.id]) continue;\n        try {\n            await browser.tabs.sendMessage(tab.id, message);\n        } catch (error) {\n            if (!error.message.includes('Could not establish connection') && !error.message.includes('Receiving end does not exist')) {\n                logClient.logWarn(`Error forwarding message to tab ${tab.id}:`, error.message);\n            }\n        }\n    }\n}\n\n// Extension Lifecycle Listeners\nbrowser.runtime.onInstalled.addListener(async (details) => {\n    logClient.logInfo('onInstalled event fired. Reason:', details.reason);\n    await initializeSessionIds();\n\n    browser.sidePanel\n        .setPanelBehavior({ openPanelOnActionClick: true })\n        .catch((error) => logClient.logError('Error setting side panel behavior:', error));\n    logClient.logInfo('Side panel behavior set.');\n\n    browser.storage.local.get().then((items) => {\n        const keysToRemove = Object.keys(items).filter(key => key.startsWith('detachedState_'));\n        if (keysToRemove.length > 0) {\n            browser.storage.local.remove(keysToRemove).then(() => {\n                logClient.logInfo('Cleaned up old storage keys on install/update.');\n            }).catch(err => {\n                logClient.logError('Error removing old storage keys:', err);\n            });\n        }\n    }).catch(err => {\n         logClient.logError('Error getting storage items for cleanup:', err);\n    });\n\n    logClient.logInfo('Triggering DB Initialization from onInstalled.');\n    eventBus.publish(DbInitializeRequest.name, new DbInitializeRequest());\n\n    ensureWorkerScriptIsReady().catch(err => {\n        logClient.logError(\"Initial worker script readiness check failed after install:\", err);\n    });\n});\n\nbrowser.runtime.onStartup.addListener(async () => {\n    logClient.logInfo('onStartup event fired.');\n    await initializeSessionIds();\n\n    logClient.logInfo('Triggering DB Initialization from onStartup (may be redundant).');\n    eventBus.publish(DbInitializeRequest.name, new DbInitializeRequest());\n\n    if (modelWorkerState === 'uninitialized') {\n        ensureWorkerScriptIsReady().catch(err => {\n            logClient.logError(\"Worker script readiness check failed on startup:\", err);\n        });\n    }\n});\n\nbrowser.action.onClicked.addListener(async (tab) => {\n    if (!tab.id) {\n        logClient.logError(\"Action Clicked: Missing tab ID.\");\n        return;\n    }\n    const tabId = tab.id;\n    logClient.logInfo(`Action clicked for tab ${tabId}`);\n    const existingPopupId = detachedPopups[tabId];\n    if (existingPopupId) {\n        logClient.logInfo(`Popup ${existingPopupId} exists for tab ${tabId}. Attempting to close popup.`);\n        try {\n            await browser.windows.remove(existingPopupId);\n            logClient.logInfo(`Closed popup window ${existingPopupId} via action click.`);\n        } catch (error) {\n            logClient.logWarn(`Failed to close popup ${existingPopupId} via action click, maybe already closed?`, error);\n            if (popupIdToTabId[existingPopupId]) {\n                logClient.logInfo(`Force cleaning maps and storage for tab ${tabId} after failed close.`);\n                delete detachedPopups[tabId];\n                delete popupIdToTabId[existingPopupId];\n                try {\n                    await browser.storage.local.remove(`detachedState_${tabId}`);\n                    await browser.sidePanel.setOptions({ tabId: tabId, enabled: true });\n                } catch (cleanupError) {\n                    logClient.logError(\"Error during defensive cleanup:\", cleanupError);\n                }\n            }\n        }\n    } else {\n        logClient.logInfo(`No popup exists for tab ${tabId}. Default side panel opening behavior should trigger.`);\n    }\n});\n\nbrowser.windows.onRemoved.addListener(async (windowId) => {\n    logClient.logInfo(`Window removed: ${windowId}`);\n    const tabId = popupIdToTabId[windowId];\n    if (tabId) {\n        logClient.logInfo(`Popup window ${windowId} for tab ${tabId} was closed.`);\n        delete detachedPopups[tabId];\n        delete popupIdToTabId[windowId];\n        try {\n            await browser.storage.local.remove(`detachedState_${tabId}`);\n            logClient.logInfo(`Removed detached state from storage for tab ${tabId}`);\n            await browser.sidePanel.setOptions({ tabId: tabId, enabled: true });\n            logClient.logInfo(`Re-enabled side panel for tab ${tabId} after popup closed.`);\n        } catch (error) {\n            logClient.logError(`Error cleaning up storage or re-enabling side panel for tab ${tabId} on popup close:`, error);\n        }\n    } else {\n        logClient.logInfo(`Window ${windowId} closed, but it wasn't a tracked popup.`);\n    }\n});\n\n// Message Handling\nbrowser.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    const { type, payload } = message;\n    let isResponseAsync = false;\n\n    logClient.logInfo(`Received message type '${type}' from`, sender.tab ? `tab ${sender.tab.id}` : sender.url || sender.id);\n\n    const workerMessageTypes = [\n        'workerScriptReady',\n        'workerReady',\n        'loadingStatus',\n        'generationStatus',\n        'generationUpdate',\n        'generationComplete',\n        'generationError',\n        'resetComplete',\n        'error'\n    ];\n\n    if (workerMessageTypes.includes(type)) {\n        logClient.logInfo(`Handling message from worker: ${type}`);\n        switch (type) {\n            case 'workerScriptReady':\n                logClient.logInfo(\"[Background] Worker SCRIPT is ready!\");\n                modelWorkerState = 'worker_script_ready';\n                if (workerScriptReadyResolver) {\n                    workerScriptReadyResolver();\n                    workerScriptReadyPromise = null;\n                }\n                browser.runtime.sendMessage({ type: 'uiUpdate', payload: { modelStatus: 'script_ready' } }).catch(() => {});\n                break;\n            case 'workerReady':\n                logClient.logInfo(\"[Background] Worker MODEL is ready! Model:\", payload?.model);\n                modelWorkerState = 'model_ready';\n                if (modelLoadResolver) {\n                    modelLoadResolver();\n                    modelLoadPromise = null;\n                }\n                browser.runtime.sendMessage({ type: 'uiUpdate', payload: { modelStatus: 'model_ready', model: payload?.model } }).catch(() => {});\n                if (workerScriptReadyResolver) {\n                    workerScriptReadyResolver();\n                    workerScriptReadyPromise = null;\n                }\n                break;\n            case 'loadingStatus':\n                if (payload?.status === 'progress' && payload?.progress) {\n                    const currentProgress = Math.floor(payload.progress);\n                    if (currentProgress >= lastLoggedProgress + 10) {\n                        logClient.logInfo(\"[Background] Worker loading status (progress):\", payload);\n                        lastLoggedProgress = currentProgress;\n                    }\n                } else {\n                    logClient.logInfo(\"[Background] Worker loading status (other):\", payload);\n                    lastLoggedProgress = -10;\n                }\n                if (modelWorkerState !== 'loading_model') {\n                    logClient.logWarn(`[Background] Received loadingStatus in unexpected state: ${modelWorkerState}`);\n                    modelWorkerState = 'loading_model';\n                }\n                browser.runtime.sendMessage({ type: 'uiLoadingStatusUpdate', payload: payload }).catch(err => {\n                    if (err.message !== \"Could not establish connection. Receiving end does not exist.\") {\n                        logClient.logWarn(\"[Background] Error sending loading status to UI:\", err.message);\n                    }\n                });\n                break;\n            case 'generationStatus':\n                logClient.logInfo(`[Background] Generation status: ${payload?.status}`);\n                if (payload?.status === 'generating') modelWorkerState = 'generating';\n                else if (payload?.status === 'interrupted') modelWorkerState = 'model_ready';\n                break;\n            case 'generationUpdate':\n                if (modelWorkerState !== 'generating') {\n                    logClient.logWarn(`[Background] Received generationUpdate in unexpected state: ${modelWorkerState}`);\n                }\n                modelWorkerState = 'generating';\n                break;\n            case 'generationComplete':\n                logClient.logInfo(\"[Background] Generation complete.\");\n                modelWorkerState = 'model_ready';\n                break;\n            case 'generationError':\n                logClient.logError(\"[Background] Generation error from worker:\", payload);\n                modelWorkerState = 'error';\n                break;\n            case 'resetComplete':\n                logClient.logInfo(\"[Background] Worker reset complete.\");\n                modelWorkerState = 'model_ready';\n                break;\n            case 'error':\n                logClient.logError(\"[Background] Received generic error from worker/offscreen:\", payload);\n                const previousState = modelWorkerState;\n                modelWorkerState = 'error';\n                if (previousState === 'creating_worker' && workerScriptReadyRejecter) {\n                    workerScriptReadyRejecter(new Error(payload || 'Generic error during script init'));\n                    workerScriptReadyPromise = null;\n                } else if (previousState === 'loading_model' && modelLoadRejecter) {\n                    modelLoadRejecter(new Error(payload || 'Generic error during model load'));\n                    modelLoadPromise = null;\n                }\n                browser.runtime.sendMessage({ type: 'uiUpdate', payload: { modelStatus: 'error', error: payload } }).catch(() => {});\n                break;\n        }\n        forwardMessageToSidePanelOrPopup(message, sender);\n        return false;\n    }\n\n    if (type === 'loadModel') {\n        logClient.logInfo(`Received 'loadModel' request from sender:`, sender);\n        const modelId = payload?.modelId;\n        logClient.logInfo(`Received 'loadModel' request from UI for model: ${modelId}.`);\n        if (!modelId) {\n            logClient.logError(\"[Background] 'loadModel' request missing modelId.\");\n            sendResponse({ success: false, error: \"Model ID not provided in request.\" });\n            return false;\n        }\n\n        isResponseAsync = true;\n        loadModel(modelId)\n            .then(() => {\n                logClient.logInfo(`loadModel(${modelId}) promise resolved successfully.`);\n                sendResponse({ success: true, message: `Model loading initiated or already complete for ${modelId}.` });\n            })\n            .catch(error => {\n                logClient.logError(`loadModel(${modelId}) failed:`, error);\n                sendResponse({ success: false, error: error.message });\n            });\n        return isResponseAsync;\n    }\n\n    if (type === 'sendChatMessage') {\n        isResponseAsync = true;\n        const { chatId, messages, options, messageId } = payload;\n        const correlationId = messageId || chatId;\n\n        if (modelWorkerState !== 'model_ready') {\n            logClient.logError(`Cannot send chat message. Model state is ${modelWorkerState}, not 'model_ready'.`);\n            sendResponse({ success: false, error: `Model not ready (state: ${modelWorkerState}). Please load a model first.` });\n            return false;\n        }\n\n        logClient.logInfo(`Model ready, sending generate request for ${correlationId}`);\n        sendToModelWorkerOffscreen({\n            type: 'generate',\n            payload: {\n                messages: messages,\n                max_new_tokens: options?.max_new_tokens,\n                temperature: options?.temperature,\n                top_k: options?.top_k,\n                correlationId: correlationId\n            }\n        })\n        .then(sendResult => {\n            if (!sendResult.success) throw new Error(\"Failed to send generate message initially.\");\n            logClient.logInfo(`Generate request sent for ${correlationId}. Waiting for worker responses.`);\n            sendResponse({ success: true, message: \"Generation request forwarded to worker.\"});\n        })\n        .catch(error => {\n            logClient.logError(`Error processing sendChatMessage for ${correlationId}:`, error);\n            if (modelWorkerState === 'generating') modelWorkerState = 'model_ready';\n            sendResponse({ success: false, error: error.message });\n        });\n\n        return isResponseAsync;\n    }\n\n    if (type === 'interruptGeneration') {\n        logClient.logInfo(\"[Background] Received interrupt request from UI.\");\n        ensureWorkerScriptIsReady()\n            .then(() => sendToModelWorkerOffscreen({ type: 'interrupt' }))\n            .then(() => sendResponse({ success: true }))\n            .catch(err => sendResponse({ success: false, error: err.message }));\n        isResponseAsync = true;\n        return isResponseAsync;\n    }\n\n    if (type === 'resetWorker') {\n        logClient.logInfo(\"[Background] Received reset request from UI.\");\n        ensureWorkerScriptIsReady()\n            .then(() => sendToModelWorkerOffscreen({ type: 'reset' }))\n            .then(() => sendResponse({ success: true }))\n            .catch(err => sendResponse({ success: false, error: err.message }));\n        isResponseAsync = true;\n        return isResponseAsync;\n    }\n\n    if (type === 'getModelWorkerState') {\n        logClient.logInfo(`Handling 'getModelWorkerState' request. Current state: ${modelWorkerState}`);\n        sendResponse({ success: true, state: modelWorkerState });\n        return false;\n    }\n\n    if (type === 'scrapeRequest') {\n        logClient.logInfo(`Handling 'scrapeRequest' request. Scraping URL: ${payload?.url}`);\n        isResponseAsync = true;\n        scrapeUrlMultiStage(payload?.url, payload?.chatId, payload?.messageId)\n            .then(() => {\n                logClient.logInfo(`scrapeRequest(${payload?.url}) promise resolved successfully.`);\n                sendResponse({ success: true, message: `Scraping orchestrator started for ${payload?.url}.` });\n            })\n            .catch(error => {\n                logClient.logError(`scrapeRequest(${payload?.url}) failed:`, error);\n                sendResponse({ success: false, error: error.message });\n            });\n        return isResponseAsync;\n    }\n\n    if (type === 'getDriveFileList') {\n        const receivedFolderId = message.folderId;\n        logClient.logInfo(`Handling 'getDriveFileList' for folder: ${receivedFolderId}`);\n        isResponseAsync = true;\n        (async () => {\n            try {\n                const token = await getDriveToken();\n                const files = await fetchDriveFileList(token, receivedFolderId);\n                logClient.logInfo(`Successfully fetched ${files?.length || 0} files/folders.`);\n\n                // Send file list via separate sendMessage\n                logClient.logInfo('[Background] Sending driveFileListData...');\n                browser.runtime.sendMessage({\n                    type: 'driveFileListData',\n                    success: true,\n                    files: files,\n                    folderId: receivedFolderId\n                }).catch(err => {\n                     logClient.logWarn('[Background] Failed to send driveFileListData:', err?.message);\n                     browser.runtime.sendMessage({ type: 'driveFileListData', success: false, error: `Failed to send data: ${err?.message}` , folderId: receivedFolderId });\n                });\n\n                logClient.logInfo('[Background] sendResponse for driveFileListResponse skipped (using separate message).');\n\n            } catch (error) {\n                logClient.logError(\"Error handling getDriveFileList:\", error);\n                // Send error via separate message too\n                browser.runtime.sendMessage({\n                     type: 'driveFileListData',\n                     success: false,\n                     error: error.message,\n                     folderId: receivedFolderId\n                 }).catch(err => {\n                     logClient.logWarn('[Background] Failed to send driveFileListData error message:', err?.message);\n                 });\n                 logClient.logInfo('[Background] sendResponse for driveFileListResponse error skipped (using separate message).');\n            }\n        })();\n        return isResponseAsync;\n    }\n\n    if (type.startsWith('db:')) {\n        logClient.logDebug(`Forwarding DB request of type '${type}' to event bus.`);\n        eventBus.publish(type, message);\n        return false;\n    }\n\n    if (type === 'getLogSessions') {\n        isResponseAsync = true;\n        (async () => {\n            try {\n                const { logSessions: sessions } = await browser.storage.local.get('logSessions');\n                sendResponse({ success: true, sessions: sessions || [] });\n            } catch (err) {\n                logClient.logError(\"Error fetching log sessions:\", err);\n                sendResponse({ success: false, error: err.message });\n            }\n        })();\n        return isResponseAsync;\n    }\n\n    if (type === 'getLogEntries') {\n        isResponseAsync = true;\n        (async () => {\n            const sessionId = payload?.sessionId;\n            if (!sessionId) {\n                sendResponse({ success: false, error: 'Session ID required' });\n                return true;\n            }\n            try {\n                const key = `logs_${sessionId}`;\n                const result = await browser.storage.local.get(key);\n                sendResponse({ success: true, entries: result[key] || [] });\n            } catch (err) {\n                logClient.logError(`Error fetching log entries for ${sessionId}:`, err);\n                sendResponse({ success: false, error: err.message });\n            }\n        })();\n        return isResponseAsync;\n    }\n\n    if (type === 'detachSidePanel') {\n        isResponseAsync = true;\n        handleDetach(sender.tab?.id).then(result => {\n            sendResponse(result);\n        }).catch(error => {\n            sendResponse({ success: false, error: error.message });\n        });\n        return isResponseAsync;\n    }\n\n    if (type === 'getDetachedState') {\n        isResponseAsync = true;\n        (async () => {\n            try {\n                const { [`detachedState_${sender.tab?.id}`]: state } = await browser.storage.local.get(`detachedState_${sender.tab?.id}`);\n                sendResponse({ success: true, state: state });\n            } catch (error) {\n                sendResponse({ success: false, error: error.message });\n            }\n        })();\n        return isResponseAsync;\n    }\n\n    logClient.logWarn(`Unhandled message type: ${type}`);\n    return false;\n});\n\nlogClient.logInfo(\"[Background-Simple] Script loaded and listening.\");"],"names":["hasChromeRuntime","componentName","mirrorToConsoleDefault","sendToDbDefault","isDbReadyForLogs","logBuffer","flushLogBuffer","eventBus","logEvent","error","init","compName","options","DbInitializationCompleteNotification","notification","logMode","initialLogMessage","_internalLogHelper","level","args","mirrorThisCall","sendThisCall","skipInitCheck","consoleArgs","formattedMessage","arg","e","logPayload","_a","currentLogSessionId","storageError","DbAddLogRequest","logDebug","logInfo","logWarn","logError","OFFSCREEN_DOCUMENT_PATH","MODEL_WORKER_OFFSCREEN_PATH","logClient.init","detachedPopups","popupIdToTabId","DNR_RULE_ID_1","DNR_RULE_PRIORITY_1","modelWorkerState","workerScriptReadyPromise","workerScriptReadyResolver","workerScriptReadyRejecter","modelLoadPromise","modelLoadResolver","modelLoadRejecter","previousLogSessionId","lastLoggedProgress","initializeSessionIds","logClient.logInfo","browser","storedPreviousId","hasModelWorkerOffscreenDocument","targetUrl","setupModelWorkerOffscreenDocument","sendToModelWorkerOffscreen","message","logClient.logDebug","ensureWorkerScriptIsReady","logClient.logError","resolve","reject","err","scriptLoadTimeout","loadModel","modelId","errorMsg","modelLoadTimeout","updateDeclarativeNetRequestRules","currentRuleIds","rule","rulesToAdd","rulesToRemove","id","hasOffscreenDocument","path","filename","setupOffscreenDocument","reasons","justification","scrapeUrlWithOffscreenIframe","url","DYNAMIC_SCRIPT_ID_PREFIX","DYNAMIC_SCRIPT_MESSAGE_TYPE","IFRAME_LOAD_TIMEOUT","dynamicScripterId","cleanup","scriptIdBase","logClient.logWarn","createResponse","messageListener","resultPayload","timeoutId","sender","sendResponse","_b","scrapeUrlWithTempTabExecuteScript","tempTabId","TEMP_TAB_LOAD_TIMEOUT","cleanupAndReject","loadTimeoutId","loadPromise","resolveLoad","rejectLoad","listener","tabId","changeInfo","updatedTab","results","scriptResult","lastError","scrapeUrlWithTempTab_ContentScript","response","scrapeUrlMultiStage","chatId","messageId","sendStageResult","stageResult","iframeResult","stage2SuccessPayload","stage2Error","executeScriptResult","stage3SuccessPayload","stage3Error","tempTabResult","stage4SuccessPayload","_c","stage4Error","getDriveToken","token","fetchDriveFileList","folderId","fields","query","pageSize","orderBy","errorData","data","forwardMessageToSidePanelOrPopup","originalSender","popupId","tabs","tab","details","items","keysToRemove","key","DbInitializeRequest","existingPopupId","cleanupError","windowId","type","payload","isResponseAsync","currentProgress","previousState","messages","correlationId","sendResult","receivedFolderId","files","sessions","sessionId","result","state"],"mappings":"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"}