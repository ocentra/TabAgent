{"version":3,"file":"offscreen.js","sources":["../src/offscreen.js"],"sourcesContent":["console.log(\"[Offscreen Script Start] Executing offscreen.js\");\n\n// Keep track of the iframe we create\nlet scrapingIframe = null;\nconst IFRAME_ID = 'scraping-iframe';\n\n// --- REMOVED Globals for Google API/Picker --- \n// let pickerApiLoaded = false;\n// let oauthToken = null;\n// let googleApiKey = null;\n// let googleAppId = null;\n\nconsole.log(\"[Offscreen Script] Adding runtime.onMessage listener...\");\n// Listen for messages from the background script\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    console.log('Offscreen: Received message:', message);\n    // This document now ONLY handles parsing/iframe tasks\n    if (message.target !== 'offscreen' && message.type !== 'createIframe' && message.type !== 'removeIframe') {\n        console.log('Offscreen: Ignoring message not intended for iframe document:', message.type);\n        return false; // Ignore messages not intended for this offscreen document\n    }\n\n    switch (message.type) {\n        // REMOVED case 'showGooglePicker' - Handled by google_drive_offscreen.js\n        // case 'showGooglePicker': ...\n        case 'createIframe':\n            console.log('[Offscreen] ENTERING createIframe handler...');\n            console.log(`[Offscreen] Handling createIframe for URL: ${message.url}`);\n            if (scrapingIframe) {\n                 console.warn('[Offscreen] Iframe already exists. Removing old one before creating new.');\n                 scrapingIframe.remove();\n                 scrapingIframe = null;\n            }\n            if (!message.url || !message.url.startsWith('http')) {\n                console.error('[Offscreen] Invalid URL received for createIframe.');\n                sendResponse({ success: false, error: 'Invalid URL provided for iframe.' });\n                return false; // Synchronous response for invalid input\n            }\n\n            try {\n                scrapingIframe = document.createElement('iframe');\n                scrapingIframe.id = IFRAME_ID;\n                scrapingIframe.src = message.url;\n                // Styling to keep it hidden but functional (may need adjustment)\n                scrapingIframe.style.position = 'absolute';\n                scrapingIframe.style.width = '1px';\n                scrapingIframe.style.height = '1px';\n                scrapingIframe.style.left = '-9999px';\n                scrapingIframe.style.top = '-9999px';\n                scrapingIframe.style.border = 'none';\n\n                document.body.appendChild(scrapingIframe);\n                console.log('[Offscreen] Iframe created and appended.');\n                // Send success response immediately, loading happens async\n                sendResponse({ success: true }); \n            } catch (error) {\n                 console.error('[Offscreen] Error creating iframe:', error);\n                 sendResponse({ success: false, error: `Failed to create iframe: ${error.message}` });\n                 // Clean up if partially created\n                 if (scrapingIframe) scrapingIframe.remove();\n                 scrapingIframe = null;\n                 return false; // Synchronous response on error\n            }\n            // We send the response synchronously above, so return false here.\n            return false; \n        case 'removeIframe':\n            console.log('[Offscreen] Handling removeIframe.');\n            if (scrapingIframe) {\n                try {\n                    scrapingIframe.remove();\n                    console.log('[Offscreen] Iframe removed successfully.');\n                    scrapingIframe = null;\n                    sendResponse({ success: true });\n                } catch (error) {\n                     console.error('[Offscreen] Error removing iframe:', error);\n                     sendResponse({ success: false, error: `Failed to remove iframe: ${error.message}`});\n                }\n            } else {\n                console.warn('[Offscreen] No iframe found to remove.');\n                sendResponse({ success: false, error: 'No iframe exists to remove.' });\n            }\n            return false; // Synchronous response\n        default:\n            console.log('[Offscreen] Received unhandled message type:', message?.type);\n            // It's important to return false if the message type isn't handled\n            return false; \n    }\n});\n\n// --- REMOVED Google Picker Functions --- \n// function loadPickerApi() { ... }\n// function handleGapiError(error) { ... }\n// function handleGapiLoad() { ... }\n// function handleClientLoad() { ... }\n// function createPicker() { ... }\n// function pickerCallback(data) { ... }\n\n// Function to close the offscreen document (still potentially useful, e.g., if parsing fails critically)\nfunction closeOffscreenDocument() {\n  console.log(\"Offscreen: Closing document.\");\n  window.close();\n}\n\nconsole.log(\"Offscreen script (Parsing/Iframe) loaded and listener added.\"); "],"names":["scrapingIframe","IFRAME_ID","message","sender","sendResponse","error"],"mappings":"AAAA,QAAQ,IAAI,iDAAiD,EAG7D,IAAIA,EAAiB,KACrB,MAAMC,EAAY,kBAQlB,QAAQ,IAAI,yDAAyD,EAErE,OAAO,QAAQ,UAAU,YAAY,CAACC,EAASC,EAAQC,IAAiB,CAGpE,GAFA,QAAQ,IAAI,+BAAgCF,CAAO,EAE/CA,EAAQ,SAAW,aAAeA,EAAQ,OAAS,gBAAkBA,EAAQ,OAAS,eACtF,eAAQ,IAAI,gEAAiEA,EAAQ,IAAI,EAClF,GAGX,OAAQA,EAAQ,KAAI,CAGhB,IAAK,eAQD,GAPA,QAAQ,IAAI,8CAA8C,EAC1D,QAAQ,IAAI,8CAA8CA,EAAQ,GAAG,EAAE,EACnEF,IACC,QAAQ,KAAK,0EAA0E,EACvFA,EAAe,OAAQ,EACvBA,EAAiB,MAElB,CAACE,EAAQ,KAAO,CAACA,EAAQ,IAAI,WAAW,MAAM,EAC9C,eAAQ,MAAM,oDAAoD,EAClEE,EAAa,CAAE,QAAS,GAAO,MAAO,kCAAkC,CAAE,EACnE,GAGX,GAAI,CACAJ,EAAiB,SAAS,cAAc,QAAQ,EAChDA,EAAe,GAAKC,EACpBD,EAAe,IAAME,EAAQ,IAE7BF,EAAe,MAAM,SAAW,WAChCA,EAAe,MAAM,MAAQ,MAC7BA,EAAe,MAAM,OAAS,MAC9BA,EAAe,MAAM,KAAO,UAC5BA,EAAe,MAAM,IAAM,UAC3BA,EAAe,MAAM,OAAS,OAE9B,SAAS,KAAK,YAAYA,CAAc,EACxC,QAAQ,IAAI,0CAA0C,EAEtDI,EAAa,CAAE,QAAS,EAAI,CAAE,CACjC,OAAQC,EAAO,CACX,eAAQ,MAAM,qCAAsCA,CAAK,EACzDD,EAAa,CAAE,QAAS,GAAO,MAAO,4BAA4BC,EAAM,OAAO,GAAI,EAE/EL,GAAgBA,EAAe,OAAQ,EAC3CA,EAAiB,KACV,EACxB,CAEY,MAAO,GACX,IAAK,eAED,GADA,QAAQ,IAAI,oCAAoC,EAC5CA,EACA,GAAI,CACAA,EAAe,OAAQ,EACvB,QAAQ,IAAI,0CAA0C,EACtDA,EAAiB,KACjBI,EAAa,CAAE,QAAS,GAAM,CACjC,OAAQC,EAAO,CACX,QAAQ,MAAM,qCAAsCA,CAAK,EACzDD,EAAa,CAAE,QAAS,GAAO,MAAO,4BAA4BC,EAAM,OAAO,EAAE,CAAC,CACvG,MAEgB,QAAQ,KAAK,wCAAwC,EACrDD,EAAa,CAAE,QAAS,GAAO,MAAO,6BAA6B,CAAE,EAEzE,MAAO,GACX,QACI,eAAQ,IAAI,+CAAgDF,GAAA,YAAAA,EAAS,IAAI,EAElE,EACnB,CACA,CAAC,EAgBD,QAAQ,IAAI,8DAA8D"}